{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Highwind Projects\\\\loan_offer_comparison\\\\client\\\\src\\\\LoanOfferComparison.tsx\",\n  _s = $RefreshSig$();\n/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\nimport React, { useState } from \"react\";\n\n// Type for backend loan offer response\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoanOfferComparison() {\n  _s();\n  // ---------------- Form State ----------------\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    emailAddress: \"\",\n    loanAmount: \"\",\n    loanTerm: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [offers, setOffers] = useState([]);\n\n  // ---------------- Validation ----------------\n  const validateField = (field, value) => {\n    if (field === \"firstName\" && !value.trim()) return \"First name is required.\";\n    if (field === \"emailAddress\") {\n      if (!value) return \"Email address is required.\";\n      if (!/\\S+@\\S+\\.\\S+/.test(value)) return \"Enter a valid email.\";\n    }\n    if (field === \"loanAmount\") {\n      if (value === \"\" || value === null) return \"Loan amount is required.\";\n      const num = Number(value); // ✅ Always convert to number\n      if (isNaN(num)) return \"Enter a valid loan amount.\";\n      if (num < 2000) return \"Loan amount must be at least $2000.\";\n    }\n    if (field === \"loanTerm\") {\n      if (value === \"\" || value === null) return \"Loan term is required.\";\n      const num = Number(value);\n      if (isNaN(num)) return \"Enter a valid loan term.\";\n      if (num < 1 || num > 7) return \"Loan term must be between 1 and 7 years.\";\n    }\n    return \"\";\n  };\n  const validateAllFields = () => {\n    const newErrors = {};\n    for (const field in formData) {\n      const error = validateField(field, formData[field]);\n      if (error) newErrors[field] = error;\n    }\n    return newErrors;\n  };\n\n  // ---------------- Handlers ----------------\n  const handleChange = (field, value) => {\n    let processedValue = value;\n    if (field === \"loanAmount\" || field === \"loanTerm\") {\n      if (value === \"\") {\n        processedValue = \"\";\n      } else {\n        const num = parseInt(value, 10);\n        processedValue = isNaN(num) ? \"\" : num; // Handle NaN properly\n      }\n    }\n    setFormData(prev => ({\n      ...prev,\n      [field]: processedValue\n    }));\n    setTouched(prev => ({\n      ...prev,\n      [field]: true\n    }));\n    const error = validateField(field, processedValue);\n    setErrors(prev => ({\n      ...prev,\n      [field]: error\n    }));\n  };\n  const handleBlur = (field, value) => {\n    setTouched(prev => ({\n      ...prev,\n      [field]: true\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [field]: validateField(field, value)\n    }));\n  };\n  const resetForm = () => {\n    setFormData({\n      firstName: \"\",\n      emailAddress: \"\",\n      loanAmount: \"\",\n      loanTerm: \"\"\n    });\n    setErrors({});\n    setTouched({});\n  };\n\n  // ---------------- Submit ----------------\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = validateAllFields();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      setTouched({\n        firstName: true,\n        emailAddress: true,\n        loanAmount: true,\n        loanTerm: true\n      });\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/offers\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch offers\");\n      const data = await response.json();\n      setOffers(data); // Display offers (Requirement 5)\n      resetForm(); // Reset form (Requirement 6)\n    } catch (error) {\n      console.error(error);\n      alert(\"Something went wrong, please try again.\");\n    }\n  };\n\n  // Disable submit until all fields are valid (Requirement 4)\n  const isFormValid = Object.values(errors).every(err => !err) && formData.firstName && formData.emailAddress && formData.loanAmount && formData.loanTerm;\n\n  // ---------------- UI ----------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOAN OFFER COMPARISON TOOL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"FIRST NAME*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.firstName,\n            onChange: e => handleChange(\"firstName\", e.target.value),\n            onBlur: e => handleBlur(\"firstName\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), touched.firstName && errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this) // Inline error (Requirement 3)\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"EMAIL ADDRESS*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: formData.emailAddress,\n            onChange: e => handleChange(\"emailAddress\", e.target.value),\n            onBlur: e => handleBlur(\"emailAddress\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), touched.emailAddress && errors.emailAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"LOAN AMOUNT ($)*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"At least $2000\",\n            value: formData.loanAmount,\n            onChange: e => handleChange(\"loanAmount\", e.target.value),\n            onBlur: e => handleBlur(\"loanAmount\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), touched.loanAmount && errors.loanAmount && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.loanAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"LOAN TERM*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"1-7 years\",\n            value: formData.loanTerm,\n            onChange: e => handleChange(\"loanTerm\", e.target.value),\n            onBlur: e => handleBlur(\"loanTerm\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), touched.loanTerm && errors.loanTerm && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.loanTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitButton\",\n          type: \"submit\",\n          disabled: !isFormValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), offers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offersContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"LOAN OFFERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"offersTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Lender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Monthly Repayment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Interest Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: offers.map((offer, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: offer.lenderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", offer.monthlyRepayment.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [offer.interestRate, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: offer.fees\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(LoanOfferComparison, \"mdMmPUyK7rc49s8W2qlqmJAK8pU=\");\n_c = LoanOfferComparison;\nexport default LoanOfferComparison;\nvar _c;\n$RefreshReg$(_c, \"LoanOfferComparison\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoanOfferComparison","_s","formData","setFormData","firstName","emailAddress","loanAmount","loanTerm","errors","setErrors","touched","setTouched","offers","setOffers","validateField","field","value","trim","test","num","Number","isNaN","validateAllFields","newErrors","error","handleChange","processedValue","parseInt","prev","handleBlur","resetForm","handleSubmit","e","preventDefault","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","alert","isFormValid","values","every","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","onBlur","className","placeholder","disabled","map","offer","idx","lenderName","monthlyRepayment","toFixed","interestRate","fees","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Highwind Projects/loan_offer_comparison/client/src/LoanOfferComparison.tsx"],"sourcesContent":["/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\nimport React, { useState } from \"react\";\n\n// Type for backend loan offer response\ntype LoanOffer = {\n  lenderName: string;\n  monthlyRepayment: number;\n  interestRate: number;\n  fees: string;\n};\n\nfunction LoanOfferComparison() {\n  // ---------------- Form State ----------------\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    emailAddress: \"\",\n    loanAmount: \"\" as number | \"\",\n    loanTerm: \"\" as number | \"\",\n  });\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\n  const [touched, setTouched] = useState<{ [key: string]: boolean }>({});\n  const [offers, setOffers] = useState<LoanOffer[]>([]);\n\n  // ---------------- Validation ----------------\n  const validateField = (field: string, value: any): string => {\n    if (field === \"firstName\" && !value.trim())\n      return \"First name is required.\";\n    if (field === \"emailAddress\") {\n      if (!value) return \"Email address is required.\";\n      if (!/\\S+@\\S+\\.\\S+/.test(value)) return \"Enter a valid email.\";\n    }\n    if (field === \"loanAmount\") {\n      if (value === \"\" || value === null) return \"Loan amount is required.\";\n      const num = Number(value); // ✅ Always convert to number\n      if (isNaN(num)) return \"Enter a valid loan amount.\";\n      if (num < 2000) return \"Loan amount must be at least $2000.\";\n    }\n\n    if (field === \"loanTerm\") {\n      if (value === \"\" || value === null) return \"Loan term is required.\";\n      const num = Number(value);\n      if (isNaN(num)) return \"Enter a valid loan term.\";\n      if (num < 1 || num > 7) return \"Loan term must be between 1 and 7 years.\";\n    }\n\n    return \"\";\n  };\n\n  const validateAllFields = () => {\n    const newErrors: { [key: string]: string } = {};\n    for (const field in formData) {\n      const error = validateField(field, (formData as any)[field]);\n      if (error) newErrors[field] = error;\n    }\n    return newErrors;\n  };\n\n  // ---------------- Handlers ----------------\n  const handleChange = (field: string, value: any) => {\n    let processedValue: any = value;\n\n    if (field === \"loanAmount\" || field === \"loanTerm\") {\n      if (value === \"\") {\n        processedValue = \"\";\n      } else {\n        const num = parseInt(value, 10);\n        processedValue = isNaN(num) ? \"\" : num; // Handle NaN properly\n      }\n    }\n\n    setFormData((prev) => ({ ...prev, [field]: processedValue }));\n    setTouched((prev) => ({ ...prev, [field]: true }));\n\n    const error = validateField(field, processedValue);\n    setErrors((prev) => ({ ...prev, [field]: error }));\n  };\n\n  const handleBlur = (field: string, value: any) => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n    setErrors((prev) => ({ ...prev, [field]: validateField(field, value) }));\n  };\n\n  const resetForm = () => {\n    setFormData({\n      firstName: \"\",\n      emailAddress: \"\",\n      loanAmount: \"\",\n      loanTerm: \"\",\n    });\n    setErrors({});\n    setTouched({});\n  };\n\n  // ---------------- Submit ----------------\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const newErrors = validateAllFields();\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      setTouched({\n        firstName: true,\n        emailAddress: true,\n        loanAmount: true,\n        loanTerm: true,\n      });\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/offers\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to fetch offers\");\n      const data: LoanOffer[] = await response.json();\n      setOffers(data); // Display offers (Requirement 5)\n      resetForm(); // Reset form (Requirement 6)\n    } catch (error) {\n      console.error(error);\n      alert(\"Something went wrong, please try again.\");\n    }\n  };\n\n  // Disable submit until all fields are valid (Requirement 4)\n  const isFormValid =\n    Object.values(errors).every((err) => !err) &&\n    formData.firstName &&\n    formData.emailAddress &&\n    formData.loanAmount &&\n    formData.loanTerm;\n\n  // ---------------- UI ----------------\n  return (\n    <div>\n      <header>\n        <h1>LOAN OFFER COMPARISON TOOL</h1>\n      </header>\n      <main>\n        <form onSubmit={handleSubmit}>\n          {/* First Name Input */}\n          <div>\n            <label>FIRST NAME*</label>\n            <input\n              type=\"text\"\n              value={formData.firstName}\n              onChange={(e) => handleChange(\"firstName\", e.target.value)}\n              onBlur={(e) => handleBlur(\"firstName\", e.target.value)}\n            />\n            {touched.firstName && errors.firstName && (\n              <span className=\"errorText\">{errors.firstName}</span> // Inline error (Requirement 3)\n            )}\n          </div>\n\n          {/* Email Address Input */}\n          <div>\n            <label>EMAIL ADDRESS*</label>\n            <input\n              type=\"email\"\n              value={formData.emailAddress}\n              onChange={(e) => handleChange(\"emailAddress\", e.target.value)}\n              onBlur={(e) => handleBlur(\"emailAddress\", e.target.value)}\n            />\n            {touched.emailAddress && errors.emailAddress && (\n              <span className=\"errorText\">{errors.emailAddress}</span>\n            )}\n          </div>\n\n          {/* Loan Amount Input */}\n          <div>\n            <label>LOAN AMOUNT ($)*</label>\n            <input\n              type=\"number\"\n              placeholder=\"At least $2000\"\n              value={formData.loanAmount}\n              onChange={(e) => handleChange(\"loanAmount\", e.target.value)}\n              onBlur={(e) => handleBlur(\"loanAmount\", e.target.value)}\n            />\n            {touched.loanAmount && errors.loanAmount && (\n              <span className=\"errorText\">{errors.loanAmount}</span>\n            )}\n          </div>\n\n          {/* Loan Term Input */}\n          <div>\n            <label>LOAN TERM*</label>\n            <input\n              type=\"number\"\n              placeholder=\"1-7 years\"\n              value={formData.loanTerm}\n              onChange={(e) => handleChange(\"loanTerm\", e.target.value)}\n              onBlur={(e) => handleBlur(\"loanTerm\", e.target.value)}\n            />\n            {touched.loanTerm && errors.loanTerm && (\n              <span className=\"errorText\">{errors.loanTerm}</span>\n            )}\n          </div>\n\n          {/* Submit Button */}\n          <button\n            className=\"submitButton\"\n            type=\"submit\"\n            disabled={!isFormValid}\n          >\n            Submit\n          </button>\n        </form>\n\n        {/* Display Loan Offers (Requirement 5) */}\n        {offers.length > 0 && (\n          <div className=\"offersContainer\">\n            <h3>LOAN OFFERS</h3>\n            <table className=\"offersTable\">\n              <thead>\n                <tr>\n                  <th>Lender</th>\n                  <th>Monthly Repayment</th>\n                  <th>Interest Rate</th>\n                  <th>Fees</th>\n                </tr>\n              </thead>\n              <tbody>\n                {offers.map((offer, idx) => (\n                  <tr key={idx}>\n                    <td>{offer.lenderName}</td>\n                    <td>${offer.monthlyRepayment.toFixed(2)}</td>\n                    <td>{offer.interestRate}%</td>\n                    <td>{offer.fees}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default LoanOfferComparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}