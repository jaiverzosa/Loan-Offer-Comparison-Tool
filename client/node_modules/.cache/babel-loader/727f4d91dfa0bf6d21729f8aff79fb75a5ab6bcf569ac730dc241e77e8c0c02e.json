{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Highwind Projects\\\\loan_offer_comparison\\\\client\\\\src\\\\LoanOfferComparison.tsx\",\n  _s = $RefreshSig$();\n/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\nimport React, { useState } from \"react\";\n\n// Type for backend loan offer response\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoanOfferComparison() {\n  _s();\n  // ---------------- Form State ----------------\n  const [firstName, setFirstName] = useState(\"\"); // First name input\n  const [emailAddress, setEmailAddress] = useState(\"\"); // Email input\n  const [loanAmount, setLoanAmount] = useState(\"\"); // Loan amount input\n  const [loanTerm, setLoanTerm] = useState(\"\"); // Loan term input\n\n  const [errors, setErrors] = useState({}); // Tracks validation errors\n  const [touched, setTouched] = useState({}); // Tracks fields that were touched\n  const [offers, setOffers] = useState([]); // Stores loan offers returned from backend\n\n  // ---------------- Validation Functions ----------------\n  // Validate all fields on submit\n  const validateAllFields = () => {\n    const newErrors = {};\n    if (!firstName.trim()) newErrors.firstName = \"First name is required.\"; // Requirement 2\n    if (!emailAddress) {\n      newErrors.emailAddress = \"Email address is required.\"; // Requirement 2\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailAddress)) {\n      newErrors.emailAddress = \"Enter a valid email.\"; // Requirement 2\n    }\n    if (loanAmount === \"\") {\n      newErrors.loanAmount = \"Loan amount is required.\";\n    } else if (typeof loanAmount === \"number\" && loanAmount < 2000) {\n      newErrors.loanAmount = \"Loan amount must be at least $2000.\";\n    }\n    if (loanTerm === \"\") {\n      newErrors.loanTerm = \"Loan term is required.\";\n    } else if (typeof loanTerm === \"number\" && (loanTerm < 1 || loanTerm > 7)) {\n      newErrors.loanTerm = \"Loan term must be between 1 and 7 years.\";\n    }\n    return newErrors;\n  };\n\n  // Validate a single field on blur/change\n  const validateField = (field, value) => {\n    let error = \"\";\n    if (field === \"firstName\" && !value.trim()) error = \"First name is required.\";\n    if (field === \"emailAddress\") {\n      if (!value) error = \"Email address is required.\";else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Enter a valid email.\";\n    }\n    if (field === \"loanAmount\") {\n      if (!value) error = \"Loan amount is required.\";else if (typeof value === \"number\" && value < 2000) error = \"Loan amount must be at least $2000.\";\n    }\n    if (field === \"loanTerm\") {\n      if (!value) error = \"Loan term is required.\";else if (typeof value === \"number\" && (value < 1 || value > 7)) error = \"Loan term must be between 1 and 7 years.\";\n    }\n    return error;\n  };\n\n  // ---------------- Handlers ----------------\n  // Handle field blur (mark touched & validate)\n  const handleBlur = (field, value) => {\n    setTouched(prev => ({\n      ...prev,\n      [field]: true\n    })); // Track that user interacted with field\n    setErrors(prev => ({\n      ...prev,\n      [field]: validateField(field, value)\n    })); // Show inline error\n  };\n\n  // Handle field change (update state & real-time validation)\n  const handleChange = (field, value) => {\n    let processedValue = value;\n    if (field === \"loanAmount\" || field === \"loanTerm\") {\n      processedValue = value === \"\" ? \"\" : parseInt(value, 10);\n    }\n    if (field === \"firstName\") setFirstName(processedValue);\n    if (field === \"emailAddress\") setEmailAddress(processedValue);\n    if (field === \"loanAmount\") setLoanAmount(processedValue);\n    if (field === \"loanTerm\") setLoanTerm(processedValue);\n    setTouched(prev => ({\n      ...prev,\n      [field]: true\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [field]: validateField(field, processedValue)\n    }));\n  };\n\n  // Reset form after successful submission\n  const resetForm = () => {\n    setFirstName(\"\");\n    setEmailAddress(\"\");\n    setLoanAmount(\"\");\n    setLoanTerm(\"\");\n    setErrors({});\n    setTouched({});\n  };\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = validateAllFields();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors); // Show errors if any\n      setTouched({\n        firstName: true,\n        emailAddress: true,\n        loanAmount: true,\n        loanTerm: true\n      });\n      return;\n    }\n    try {\n      // ---------------- API Call to Backend ----------------\n      const response = await fetch(\"http://localhost:5000/api/offers\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          firstName,\n          emailAddress,\n          loanAmount,\n          loanTerm\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch offers\");\n      const data = await response.json();\n      setOffers(data); // Display offers (Requirement 5)\n\n      resetForm(); // Reset form (Requirement 6)\n    } catch (error) {\n      console.error(error);\n      alert(\"Something went wrong, please try again.\"); // Error handling\n    }\n  };\n\n  // Disable submit until all fields are valid (Requirement 4)\n  const isFormValid = Object.values(errors).every(err => !err) && firstName && emailAddress && loanAmount && loanTerm;\n\n  // ---------------- UI ----------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOAN OFFER COMPARISON TOOL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"FIRST NAME*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: firstName,\n            onChange: e => handleChange(\"firstName\", e.target.value),\n            onBlur: e => handleBlur(\"firstName\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), touched.firstName && errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this) // Inline error (Requirement 3)\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"EMAIL ADDRESS*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: emailAddress,\n            onChange: e => handleChange(\"emailAddress\", e.target.value),\n            onBlur: e => handleBlur(\"emailAddress\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), touched.emailAddress && errors.emailAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this) // Inline error (Requirement 3)\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"LOAN AMOUNT ($)*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"At least $2000\",\n            value: loanAmount,\n            onChange: e => handleChange(\"loanAmount\", e.target.value),\n            onBlur: e => handleBlur(\"loanAmount\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), touched.loanAmount && errors.loanAmount && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.loanAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this) // Inline error (Requirement 3)\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"LOAN TERM*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"1-7 years\",\n            value: loanTerm,\n            onChange: e => handleChange(\"loanTerm\", e.target.value),\n            onBlur: e => handleBlur(\"loanTerm\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), touched.loanTerm && errors.loanTerm && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorText\",\n            children: errors.loanTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this) // Inline error (Requirement 3)\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitButton\",\n          type: \"submit\",\n          disabled: !isFormValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), offers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offersContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"LOAN OFFERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"offersTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Lender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Monthly Repayment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Interest Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: offers.map((offer, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: offer.lenderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", offer.monthlyRepayment.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [offer.interestRate, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: offer.fees\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(LoanOfferComparison, \"31Fl00IAXnMviLIZM2jwDvnyvdU=\");\n_c = LoanOfferComparison;\nexport default LoanOfferComparison;\nvar _c;\n$RefreshReg$(_c, \"LoanOfferComparison\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoanOfferComparison","_s","firstName","setFirstName","emailAddress","setEmailAddress","loanAmount","setLoanAmount","loanTerm","setLoanTerm","errors","setErrors","touched","setTouched","offers","setOffers","validateAllFields","newErrors","trim","test","validateField","field","value","error","handleBlur","prev","handleChange","processedValue","parseInt","resetForm","handleSubmit","e","preventDefault","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","alert","isFormValid","values","every","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","onBlur","className","placeholder","disabled","map","offer","idx","lenderName","monthlyRepayment","toFixed","interestRate","fees","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Highwind Projects/loan_offer_comparison/client/src/LoanOfferComparison.tsx"],"sourcesContent":["/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\nimport React, { useState } from \"react\";\n\n// Type for backend loan offer response\ntype LoanOffer = {\n  lenderName: string;\n  monthlyRepayment: number;\n  interestRate: number;\n  fees: string;\n};\n\nfunction LoanOfferComparison() {\n  // ---------------- Form State ----------------\n  const [firstName, setFirstName] = useState(\"\"); // First name input\n  const [emailAddress, setEmailAddress] = useState(\"\"); // Email input\n  const [loanAmount, setLoanAmount] = useState<number | \"\">(\"\"); // Loan amount input\n  const [loanTerm, setLoanTerm] = useState<number | \"\">(\"\"); // Loan term input\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({}); // Tracks validation errors\n  const [touched, setTouched] = useState<{ [key: string]: boolean }>({}); // Tracks fields that were touched\n  const [offers, setOffers] = useState<LoanOffer[]>([]); // Stores loan offers returned from backend\n\n  // ---------------- Validation Functions ----------------\n  // Validate all fields on submit\n  const validateAllFields = () => {\n    const newErrors: { [key: string]: string } = {};\n    if (!firstName.trim()) newErrors.firstName = \"First name is required.\"; // Requirement 2\n    if (!emailAddress) {\n      newErrors.emailAddress = \"Email address is required.\"; // Requirement 2\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailAddress)) {\n      newErrors.emailAddress = \"Enter a valid email.\"; // Requirement 2\n    }\n    if (loanAmount === \"\") {\n      newErrors.loanAmount = \"Loan amount is required.\";\n    } else if (typeof loanAmount === \"number\" && loanAmount < 2000) {\n      newErrors.loanAmount = \"Loan amount must be at least $2000.\";\n    }\n\n    if (loanTerm === \"\") {\n      newErrors.loanTerm = \"Loan term is required.\";\n    } else if (typeof loanTerm === \"number\" && (loanTerm < 1 || loanTerm > 7)) {\n      newErrors.loanTerm = \"Loan term must be between 1 and 7 years.\";\n    }\n\n    return newErrors;\n  };\n\n  // Validate a single field on blur/change\n  const validateField = (field: string, value: any) => {\n    let error = \"\";\n    if (field === \"firstName\" && !value.trim())\n      error = \"First name is required.\";\n    if (field === \"emailAddress\") {\n      if (!value) error = \"Email address is required.\";\n      else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Enter a valid email.\";\n    }\n    if (field === \"loanAmount\") {\n      if (!value) error = \"Loan amount is required.\";\n      else if (typeof value === \"number\" && value < 2000)\n        error = \"Loan amount must be at least $2000.\";\n    }\n    if (field === \"loanTerm\") {\n      if (!value) error = \"Loan term is required.\";\n      else if (typeof value === \"number\" && (value < 1 || value > 7))\n        error = \"Loan term must be between 1 and 7 years.\";\n    }\n    return error;\n  };\n\n  // ---------------- Handlers ----------------\n  // Handle field blur (mark touched & validate)\n  const handleBlur = (field: string, value: any) => {\n    setTouched((prev) => ({ ...prev, [field]: true })); // Track that user interacted with field\n    setErrors((prev) => ({ ...prev, [field]: validateField(field, value) })); // Show inline error\n  };\n\n  // Handle field change (update state & real-time validation)\n  const handleChange = (field: string, value: any) => {\n    let processedValue: any = value;\n\n    if (field === \"loanAmount\" || field === \"loanTerm\") {\n      processedValue = value === \"\" ? \"\" : parseInt(value, 10);\n    }\n\n    if (field === \"firstName\") setFirstName(processedValue);\n    if (field === \"emailAddress\") setEmailAddress(processedValue);\n    if (field === \"loanAmount\") setLoanAmount(processedValue);\n    if (field === \"loanTerm\") setLoanTerm(processedValue);\n\n    setTouched((prev) => ({ ...prev, [field]: true }));\n    setErrors((prev) => ({\n      ...prev,\n      [field]: validateField(field, processedValue),\n    }));\n  };\n\n  // Reset form after successful submission\n  const resetForm = () => {\n    setFirstName(\"\");\n    setEmailAddress(\"\");\n    setLoanAmount(\"\");\n    setLoanTerm(\"\");\n    setErrors({});\n    setTouched({});\n  };\n\n  // Handle form submit\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const newErrors = validateAllFields();\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors); // Show errors if any\n      setTouched({\n        firstName: true,\n        emailAddress: true,\n        loanAmount: true,\n        loanTerm: true,\n      });\n      return;\n    }\n\n    try {\n      // ---------------- API Call to Backend ----------------\n      const response = await fetch(\"http://localhost:5000/api/offers\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          firstName,\n          emailAddress,\n          loanAmount,\n          loanTerm,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to fetch offers\");\n\n      const data: LoanOffer[] = await response.json();\n      setOffers(data); // Display offers (Requirement 5)\n\n      resetForm(); // Reset form (Requirement 6)\n    } catch (error) {\n      console.error(error);\n      alert(\"Something went wrong, please try again.\"); // Error handling\n    }\n  };\n\n  // Disable submit until all fields are valid (Requirement 4)\n  const isFormValid =\n    Object.values(errors).every((err) => !err) &&\n    firstName &&\n    emailAddress &&\n    loanAmount &&\n    loanTerm;\n\n  // ---------------- UI ----------------\n  return (\n    <div>\n      <header>\n        <h1>LOAN OFFER COMPARISON TOOL</h1>\n      </header>\n      <main>\n        <form onSubmit={handleSubmit}>\n          {/* First Name Input */}\n          <div>\n            <label>FIRST NAME*</label>\n            <input\n              type=\"text\"\n              value={firstName}\n              onChange={(e) => handleChange(\"firstName\", e.target.value)}\n              onBlur={(e) => handleBlur(\"firstName\", e.target.value)}\n            />\n            {touched.firstName && errors.firstName && (\n              <span className=\"errorText\">{errors.firstName}</span> // Inline error (Requirement 3)\n            )}\n          </div>\n\n          {/* Email Address Input */}\n          <div>\n            <label>EMAIL ADDRESS*</label>\n            <input\n              type=\"email\"\n              value={emailAddress}\n              onChange={(e) => handleChange(\"emailAddress\", e.target.value)}\n              onBlur={(e) => handleBlur(\"emailAddress\", e.target.value)}\n            />\n            {touched.emailAddress && errors.emailAddress && (\n              <span className=\"errorText\">{errors.emailAddress}</span> // Inline error (Requirement 3)\n            )}\n          </div>\n\n          {/* Loan Amount Input */}\n          <div>\n            <label>LOAN AMOUNT ($)*</label>\n            <input\n              type=\"number\"\n              placeholder=\"At least $2000\"\n              value={loanAmount}\n              onChange={(e) => handleChange(\"loanAmount\", e.target.value)}\n              onBlur={(e) => handleBlur(\"loanAmount\", e.target.value)}\n            />\n            {touched.loanAmount && errors.loanAmount && (\n              <span className=\"errorText\">{errors.loanAmount}</span> // Inline error (Requirement 3)\n            )}\n          </div>\n\n          {/* Loan Term Input */}\n          <div>\n            <label>LOAN TERM*</label>\n            <input\n              type=\"number\"\n              placeholder=\"1-7 years\"\n              value={loanTerm}\n              onChange={(e) => handleChange(\"loanTerm\", e.target.value)}\n              onBlur={(e) => handleBlur(\"loanTerm\", e.target.value)}\n            />\n            {touched.loanTerm && errors.loanTerm && (\n              <span className=\"errorText\">{errors.loanTerm}</span> // Inline error (Requirement 3)\n            )}\n          </div>\n\n          {/* Submit Button */}\n          <button\n            className=\"submitButton\"\n            type=\"submit\"\n            disabled={!isFormValid}\n          >\n            Submit\n          </button>\n        </form>\n\n        {/* Display Loan Offers (Requirement 5) */}\n        {offers.length > 0 && (\n          <div className=\"offersContainer\">\n            <h3>LOAN OFFERS</h3>\n            <table className=\"offersTable\">\n              <thead>\n                <tr>\n                  <th>Lender</th>\n                  <th>Monthly Repayment</th>\n                  <th>Interest Rate</th>\n                  <th>Fees</th>\n                </tr>\n              </thead>\n              <tbody>\n                {offers.map((offer, idx) => (\n                  <tr key={idx}>\n                    <td>{offer.lenderName}</td>\n                    <td>${offer.monthlyRepayment.toFixed(2)}</td>\n                    <td>{offer.interestRate}%</td>\n                    <td>{offer.fees}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default LoanOfferComparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}