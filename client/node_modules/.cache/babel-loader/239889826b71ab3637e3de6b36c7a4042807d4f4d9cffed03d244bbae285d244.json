{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Highwind Projects\\\\loan_offer_comparison\\\\client\\\\src\\\\LoanOfferComparison.tsx\",\n  _s = $RefreshSig$();\n/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\n/**\n * Assignment Requirements Covered:\n * - Frontend form with validation and submit\n * - Disable button until valid\n * - POST request to backend\n * - Display loan offers\n * - Reset form after submit\n */\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoanOfferComparison = () => {\n  _s();\n  // form state\n  const [firstName, setFirstName] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [loanAmount, setLoanAmount] = useState(\"\");\n  const [loanTerm, setLoanTerm] = useState(\"\");\n  const [offers, setOffers] = useState([]);\n  const [errors, setErrors] = useState({});\n\n  // ✅ validate inputs in real-time\n  const validate = () => {\n    const newErrors = {};\n    if (!firstName) newErrors.firstName = \"First name is required\"; // required\n    if (!emailAddress) {\n      newErrors.emailAddress = \"Email is required\"; // required\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailAddress)) {\n      newErrors.emailAddress = \"Email is invalid\"; // must be valid format\n    }\n    if (!loanAmount || loanAmount < 2000) {\n      newErrors.loanAmount = \"Loan amount must be at least $2000\"; // minimum $2000\n    }\n    if (!loanTerm || loanTerm < 1 || loanTerm > 7) {\n      newErrors.loanTerm = \"Loan term must be 1–7 years\"; // must be between 1–7\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // ✅ handle submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validate()) return; // don’t submit if invalid\n\n    // send form data to backend\n    const response = await fetch(\"http://localhost:5000/api/offers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstName,\n        emailAddress,\n        loanAmount,\n        loanTerm\n      })\n    });\n    const data = await response.json();\n    setOffers(data); // ✅ display offers\n    // reset form after submit\n    setFirstName(\"\");\n    setEmailAddress(\"\");\n    setLoanAmount(\"\");\n    setLoanTerm(\"\");\n    setErrors({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loan Offer Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        onBlur: validate // ✅ validate on blur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email Address\",\n        value: emailAddress,\n        onChange: e => setEmailAddress(e.target.value),\n        onBlur: validate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), errors.emailAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: errors.emailAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Loan Amount ($)\",\n        value: loanAmount,\n        onChange: e => setLoanAmount(Number(e.target.value)),\n        onBlur: validate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), errors.loanAmount && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: errors.loanAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Loan Term (Years)\",\n        value: loanTerm,\n        onChange: e => setLoanTerm(Number(e.target.value)),\n        onBlur: validate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), errors.loanTerm && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: errors.loanTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !firstName || !emailAddress || !loanAmount || !loanTerm || Object.keys(errors).length > 0,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), offers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loan Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: offers.map((offer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [offer.lenderName, \" \\u2014 $\", offer.monthlyRepayment, \" / month @\", \" \", offer.interestRate, \"% (\", offer.fees, \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(LoanOfferComparison, \"VGrpb2YOf9ejpPYK87Lj3hGpGUc=\");\n_c = LoanOfferComparison;\nexport default LoanOfferComparison;\nvar _c;\n$RefreshReg$(_c, \"LoanOfferComparison\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoanOfferComparison","_s","firstName","setFirstName","emailAddress","setEmailAddress","loanAmount","setLoanAmount","loanTerm","setLoanTerm","offers","setOffers","errors","setErrors","validate","newErrors","test","Object","keys","length","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onBlur","style","color","Number","disabled","map","offer","index","lenderName","monthlyRepayment","interestRate","fees","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Highwind Projects/loan_offer_comparison/client/src/LoanOfferComparison.tsx"],"sourcesContent":["/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\n/**\n * Assignment Requirements Covered:\n * - Frontend form with validation and submit\n * - Disable button until valid\n * - POST request to backend\n * - Display loan offers\n * - Reset form after submit\n */\n\nimport React, { useState } from \"react\";\n\nconst LoanOfferComparison: React.FC = () => {\n  // form state\n  const [firstName, setFirstName] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [loanAmount, setLoanAmount] = useState<number | \"\">(\"\");\n  const [loanTerm, setLoanTerm] = useState<number | \"\">(\"\");\n  const [offers, setOffers] = useState<any[]>([]);\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\n\n  // ✅ validate inputs in real-time\n  const validate = () => {\n    const newErrors: { [key: string]: string } = {};\n    if (!firstName) newErrors.firstName = \"First name is required\"; // required\n    if (!emailAddress) {\n      newErrors.emailAddress = \"Email is required\"; // required\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailAddress)) {\n      newErrors.emailAddress = \"Email is invalid\"; // must be valid format\n    }\n    if (!loanAmount || loanAmount < 2000) {\n      newErrors.loanAmount = \"Loan amount must be at least $2000\"; // minimum $2000\n    }\n    if (!loanTerm || loanTerm < 1 || loanTerm > 7) {\n      newErrors.loanTerm = \"Loan term must be 1–7 years\"; // must be between 1–7\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // ✅ handle submit\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!validate()) return; // don’t submit if invalid\n\n    // send form data to backend\n    const response = await fetch(\"http://localhost:5000/api/offers\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ firstName, emailAddress, loanAmount, loanTerm }),\n    });\n\n    const data = await response.json();\n    setOffers(data); // ✅ display offers\n    // reset form after submit\n    setFirstName(\"\");\n    setEmailAddress(\"\");\n    setLoanAmount(\"\");\n    setLoanTerm(\"\");\n    setErrors({});\n  };\n\n  return (\n    <div>\n      <h1>Loan Offer Comparison</h1>\n      <form onSubmit={handleSubmit}>\n        {/* First Name input */}\n        <input\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n          onBlur={validate} // ✅ validate on blur\n        />\n        {errors.firstName && <p style={{ color: \"red\" }}>{errors.firstName}</p>}\n\n        {/* Email input */}\n        <input\n          type=\"email\"\n          placeholder=\"Email Address\"\n          value={emailAddress}\n          onChange={(e) => setEmailAddress(e.target.value)}\n          onBlur={validate}\n        />\n        {errors.emailAddress && (\n          <p style={{ color: \"red\" }}>{errors.emailAddress}</p>\n        )}\n\n        {/* Loan Amount input */}\n        <input\n          type=\"number\"\n          placeholder=\"Loan Amount ($)\"\n          value={loanAmount}\n          onChange={(e) => setLoanAmount(Number(e.target.value))}\n          onBlur={validate}\n        />\n        {errors.loanAmount && (\n          <p style={{ color: \"red\" }}>{errors.loanAmount}</p>\n        )}\n\n        {/* Loan Term input */}\n        <input\n          type=\"number\"\n          placeholder=\"Loan Term (Years)\"\n          value={loanTerm}\n          onChange={(e) => setLoanTerm(Number(e.target.value))}\n          onBlur={validate}\n        />\n        {errors.loanTerm && <p style={{ color: \"red\" }}>{errors.loanTerm}</p>}\n\n        {/* Submit disabled until valid */}\n        <button\n          type=\"submit\"\n          disabled={\n            !firstName ||\n            !emailAddress ||\n            !loanAmount ||\n            !loanTerm ||\n            Object.keys(errors).length > 0\n          }\n        >\n          Submit\n        </button>\n      </form>\n\n      {/* ✅ Display offers */}\n      {offers.length > 0 && (\n        <div>\n          <h2>Loan Offers</h2>\n          <ul>\n            {offers.map((offer, index) => (\n              <li key={index}>\n                {offer.lenderName} — ${offer.monthlyRepayment} / month @{\" \"}\n                {offer.interestRate}% ({offer.fees})\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoanOfferComparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}