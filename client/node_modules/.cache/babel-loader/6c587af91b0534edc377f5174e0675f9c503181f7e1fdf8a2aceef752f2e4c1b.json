{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Highwind Projects\\\\loan_offer_comparison\\\\client\\\\src\\\\LoanOfferComparison.tsx\",\n  _s = $RefreshSig$();\n/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\nimport React, { useState } from \"react\";\n\n// Type for backend loan offer response\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoanOfferComparison() {\n  _s();\n  // ---------------- Form State ----------------\n  const [firstName, setFirstName] = useState(\"\"); // First name input\n  const [emailAddress, setEmailAddress] = useState(\"\"); // Email input\n  const [loanAmount, setLoanAmount] = useState(\"\"); // Loan amount input\n  const [loanTerm, setLoanTerm] = useState(\"\"); // Loan term input\n\n  const [errors, setErrors] = useState({}); // Tracks validation errors\n  const [touched, setTouched] = useState({}); // Tracks fields that were touched\n  const [offers, setOffers] = useState([]); // Stores loan offers returned from backend\n\n  // ---------------- Validation Functions ----------------\n  // Validate all fields on submit\n  const validateAllFields = () => {\n    const newErrors = {};\n    if (!firstName.trim()) newErrors.firstName = \"First name is required.\"; // Requirement 2\n    if (!emailAddress) {\n      newErrors.emailAddress = \"Email address is required.\"; // Requirement 2\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailAddress)) {\n      newErrors.emailAddress = \"Enter a valid email.\"; // Requirement 2\n    }\n    if (!loanAmount) {\n      newErrors.loanAmount = \"Loan amount is required.\"; // Requirement 2\n    } else if (typeof loanAmount === \"number\" && loanAmount < 2000) {\n      newErrors.loanAmount = \"Loan amount must be at least $2000.\"; // Requirement 1 & 2\n    }\n    if (!loanTerm) {\n      newErrors.loanTerm = \"Loan term is required.\"; // Requirement 2\n    } else if (typeof loanTerm === \"number\" && (loanTerm < 1 || loanTerm > 7)) {\n      newErrors.loanTerm = \"Loan term must be between 1 and 7 years.\"; // Requirement 1 & 2\n    }\n    return newErrors;\n  };\n\n  // Validate a single field on blur/change\n  const validateField = (field, value) => {\n    let error = \"\";\n    if (field === \"firstName\" && !value.trim()) error = \"First name is required.\";\n    if (field === \"emailAddress\") {\n      if (!value) error = \"Email address is required.\";else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Enter a valid email.\";\n    }\n    if (field === \"loanAmount\") {\n      if (!value) error = \"Loan amount is required.\";else if (typeof value === \"number\" && value < 2000) error = \"Loan amount must be at least $2000.\";\n    }\n    if (field === \"loanTerm\") {\n      if (!value) error = \"Loan term is required.\";else if (typeof value === \"number\" && (value < 1 || value > 7)) error = \"Loan term must be between 1 and 7 years.\";\n    }\n    return error;\n  };\n\n  // ---------------- Handlers ----------------\n  // Handle field blur (mark touched & validate)\n  const handleBlur = (field, value) => {\n    setTouched({\n      ...touched,\n      [field]: true\n    }); // Track that user interacted with field\n    setErrors({\n      ...errors,\n      [field]: validateField(field, value)\n    }); // Show inline error\n  };\n\n  // Handle field change (update state & real-time validation)\n  const handleChange = (field, value) => {\n    if (field === \"firstName\") setFirstName(value);\n    if (field === \"emailAddress\") setEmailAddress(value);\n    if (field === \"loanAmount\") setLoanAmount(value === \"\" ? \"\" : Number(value));\n    if (field === \"loanTerm\") setLoanTerm(value === \"\" ? \"\" : Number(value));\n\n    // Validate in real-time if user already touched the field\n    if (touched[field]) {\n      setErrors({\n        ...errors,\n        [field]: validateField(field, value)\n      }); // Inline error\n    }\n  };\n\n  // Reset form after successful submission\n  const resetForm = () => {\n    setFirstName(\"\");\n    setEmailAddress(\"\");\n    setLoanAmount(\"\");\n    setLoanTerm(\"\");\n    setErrors({});\n    setTouched({});\n  };\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = validateAllFields();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors); // Show errors if any\n      setTouched({\n        firstName: true,\n        emailAddress: true,\n        loanAmount: true,\n        loanTerm: true\n      });\n      return;\n    }\n    try {\n      // ---------------- API Call to Backend ----------------\n      const response = await fetch(\"http://localhost:5000/api/offers\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          firstName,\n          emailAddress,\n          loanAmount,\n          loanTerm\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch offers\");\n      const data = await response.json();\n      setOffers(data); // Display offers (Requirement 5)\n\n      resetForm(); // Reset form (Requirement 6)\n    } catch (error) {\n      console.error(error);\n      alert(\"Something went wrong, please try again.\"); // Error handling\n    }\n  };\n\n  // Disable submit until all fields are valid (Requirement 4)\n  const isFormValid = Object.values(errors).every(err => !err) && firstName && emailAddress && loanAmount && loanTerm;\n\n  // ---------------- UI ----------------\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"First Name\",\n          value: firstName,\n          onChange: e => handleChange(\"firstName\", e.target.value),\n          onBlur: e => handleBlur(\"firstName\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), touched.firstName && errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorText\",\n          style: {\n            color: \"red\"\n          },\n          children: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this) // Inline error (Requirement 3)\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          value: emailAddress,\n          onChange: e => handleChange(\"emailAddress\", e.target.value),\n          onBlur: e => handleBlur(\"emailAddress\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), touched.emailAddress && errors.emailAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorText\",\n          style: {\n            color: \"red\"\n          },\n          children: errors.emailAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this) // Inline error (Requirement 3)\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Loan Amount\",\n          value: loanAmount,\n          onChange: e => handleChange(\"loanAmount\", e.target.value),\n          onBlur: e => handleBlur(\"loanAmount\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), touched.loanAmount && errors.loanAmount && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorText\",\n          style: {\n            color: \"red\"\n          },\n          children: errors.loanAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this) // Inline error (Requirement 3)\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Loan Term (1-7 years)\",\n          value: loanTerm,\n          onChange: e => handleChange(\"loanTerm\", e.target.value),\n          onBlur: e => handleBlur(\"loanTerm\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), touched.loanTerm && errors.loanTerm && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorText\",\n          style: {\n            color: \"red\"\n          },\n          children: errors.loanTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this) // Inline error (Requirement 3)\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isFormValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), offers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loan Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: offers.map((offer, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: offer.lenderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), \" \\u2014 $\", offer.monthlyRepayment.toFixed(2), \" / month @\", \" \", offer.interestRate, \"% (\", offer.fees, \")\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(LoanOfferComparison, \"31Fl00IAXnMviLIZM2jwDvnyvdU=\");\n_c = LoanOfferComparison;\nexport default LoanOfferComparison;\nvar _c;\n$RefreshReg$(_c, \"LoanOfferComparison\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoanOfferComparison","_s","firstName","setFirstName","emailAddress","setEmailAddress","loanAmount","setLoanAmount","loanTerm","setLoanTerm","errors","setErrors","touched","setTouched","offers","setOffers","validateAllFields","newErrors","trim","test","validateField","field","value","error","handleBlur","handleChange","Number","resetForm","handleSubmit","e","preventDefault","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","alert","isFormValid","values","every","err","children","onSubmit","type","placeholder","onChange","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","disabled","map","offer","idx","lenderName","monthlyRepayment","toFixed","interestRate","fees","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Highwind Projects/loan_offer_comparison/client/src/LoanOfferComparison.tsx"],"sourcesContent":["/**\n * Assignment Requirements Covered:\n * 1. Create a frontend form with fields:\n *    - First Name\n *    - Email Address\n *    - Loan Amount (minimum $2000)\n *    - Loan Term (1–7 years)\n *\n * 2. Implement real-time form validation:\n *    - First name required\n *    - Email required and must be valid format\n *    - Loan amount required and must be ≥ $2000\n *    - Loan term required and must be between 1–7 years\n *\n * 3. Show inline error messages when inputs are invalid.\n *\n * 4. Disable Submit button until all fields are valid.\n *\n * 5. On Submit:\n *    - Send form data to backend endpoint (/api/offers) via POST request\n *    - Receive loan offers from backend\n *    - Display loan offers in a list with lender name, interest rate, fees, and calculated monthly repayment\n *\n * 6. Reset form fields after successful submission.\n */\n\nimport React, { useState } from \"react\";\n\n// Type for backend loan offer response\ntype LoanOffer = {\n  lenderName: string;\n  monthlyRepayment: number;\n  interestRate: number;\n  fees: string;\n};\n\nfunction LoanOfferComparison() {\n  // ---------------- Form State ----------------\n  const [firstName, setFirstName] = useState(\"\"); // First name input\n  const [emailAddress, setEmailAddress] = useState(\"\"); // Email input\n  const [loanAmount, setLoanAmount] = useState<number | \"\">(\"\"); // Loan amount input\n  const [loanTerm, setLoanTerm] = useState<number | \"\">(\"\"); // Loan term input\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({}); // Tracks validation errors\n  const [touched, setTouched] = useState<{ [key: string]: boolean }>({}); // Tracks fields that were touched\n  const [offers, setOffers] = useState<LoanOffer[]>([]); // Stores loan offers returned from backend\n\n  // ---------------- Validation Functions ----------------\n  // Validate all fields on submit\n  const validateAllFields = () => {\n    const newErrors: { [key: string]: string } = {};\n    if (!firstName.trim()) newErrors.firstName = \"First name is required.\"; // Requirement 2\n    if (!emailAddress) {\n      newErrors.emailAddress = \"Email address is required.\"; // Requirement 2\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailAddress)) {\n      newErrors.emailAddress = \"Enter a valid email.\"; // Requirement 2\n    }\n    if (!loanAmount) {\n      newErrors.loanAmount = \"Loan amount is required.\"; // Requirement 2\n    } else if (typeof loanAmount === \"number\" && loanAmount < 2000) {\n      newErrors.loanAmount = \"Loan amount must be at least $2000.\"; // Requirement 1 & 2\n    }\n    if (!loanTerm) {\n      newErrors.loanTerm = \"Loan term is required.\"; // Requirement 2\n    } else if (typeof loanTerm === \"number\" && (loanTerm < 1 || loanTerm > 7)) {\n      newErrors.loanTerm = \"Loan term must be between 1 and 7 years.\"; // Requirement 1 & 2\n    }\n    return newErrors;\n  };\n\n  // Validate a single field on blur/change\n  const validateField = (field: string, value: any) => {\n    let error = \"\";\n    if (field === \"firstName\" && !value.trim())\n      error = \"First name is required.\";\n    if (field === \"emailAddress\") {\n      if (!value) error = \"Email address is required.\";\n      else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Enter a valid email.\";\n    }\n    if (field === \"loanAmount\") {\n      if (!value) error = \"Loan amount is required.\";\n      else if (typeof value === \"number\" && value < 2000)\n        error = \"Loan amount must be at least $2000.\";\n    }\n    if (field === \"loanTerm\") {\n      if (!value) error = \"Loan term is required.\";\n      else if (typeof value === \"number\" && (value < 1 || value > 7))\n        error = \"Loan term must be between 1 and 7 years.\";\n    }\n    return error;\n  };\n\n  // ---------------- Handlers ----------------\n  // Handle field blur (mark touched & validate)\n  const handleBlur = (field: string, value: any) => {\n    setTouched({ ...touched, [field]: true }); // Track that user interacted with field\n    setErrors({ ...errors, [field]: validateField(field, value) }); // Show inline error\n  };\n\n  // Handle field change (update state & real-time validation)\n  const handleChange = (field: string, value: any) => {\n    if (field === \"firstName\") setFirstName(value);\n    if (field === \"emailAddress\") setEmailAddress(value);\n    if (field === \"loanAmount\")\n      setLoanAmount(value === \"\" ? \"\" : Number(value));\n    if (field === \"loanTerm\") setLoanTerm(value === \"\" ? \"\" : Number(value));\n\n    // Validate in real-time if user already touched the field\n    if (touched[field]) {\n      setErrors({ ...errors, [field]: validateField(field, value) }); // Inline error\n    }\n  };\n\n  // Reset form after successful submission\n  const resetForm = () => {\n    setFirstName(\"\");\n    setEmailAddress(\"\");\n    setLoanAmount(\"\");\n    setLoanTerm(\"\");\n    setErrors({});\n    setTouched({});\n  };\n\n  // Handle form submit\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const newErrors = validateAllFields();\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors); // Show errors if any\n      setTouched({\n        firstName: true,\n        emailAddress: true,\n        loanAmount: true,\n        loanTerm: true,\n      });\n      return;\n    }\n\n    try {\n      // ---------------- API Call to Backend ----------------\n      const response = await fetch(\"http://localhost:5000/api/offers\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          firstName,\n          emailAddress,\n          loanAmount,\n          loanTerm,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to fetch offers\");\n\n      const data: LoanOffer[] = await response.json();\n      setOffers(data); // Display offers (Requirement 5)\n\n      resetForm(); // Reset form (Requirement 6)\n    } catch (error) {\n      console.error(error);\n      alert(\"Something went wrong, please try again.\"); // Error handling\n    }\n  };\n\n  // Disable submit until all fields are valid (Requirement 4)\n  const isFormValid =\n    Object.values(errors).every((err) => !err) &&\n    firstName &&\n    emailAddress &&\n    loanAmount &&\n    loanTerm;\n\n  // ---------------- UI ----------------\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        {/* First Name Input */}\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            value={firstName}\n            onChange={(e) => handleChange(\"firstName\", e.target.value)}\n            onBlur={(e) => handleBlur(\"firstName\", e.target.value)}\n          />\n          {touched.firstName && errors.firstName && (\n            <span className=\"errorText\" style={{ color: \"red\" }}>\n              {errors.firstName}\n            </span> // Inline error (Requirement 3)\n          )}\n        </div>\n\n        {/* Email Address Input */}\n        <div>\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            value={emailAddress}\n            onChange={(e) => handleChange(\"emailAddress\", e.target.value)}\n            onBlur={(e) => handleBlur(\"emailAddress\", e.target.value)}\n          />\n          {touched.emailAddress && errors.emailAddress && (\n            <span className=\"errorText\" style={{ color: \"red\" }}>\n              {errors.emailAddress}\n            </span> // Inline error (Requirement 3)\n          )}\n        </div>\n\n        {/* Loan Amount Input */}\n        <div>\n          <input\n            type=\"number\"\n            placeholder=\"Loan Amount\"\n            value={loanAmount}\n            onChange={(e) => handleChange(\"loanAmount\", e.target.value)}\n            onBlur={(e) => handleBlur(\"loanAmount\", e.target.value)}\n          />\n          {touched.loanAmount && errors.loanAmount && (\n            <span className=\"errorText\" style={{ color: \"red\" }}>\n              {errors.loanAmount}\n            </span> // Inline error (Requirement 3)\n          )}\n        </div>\n\n        {/* Loan Term Input */}\n        <div>\n          <input\n            type=\"number\"\n            placeholder=\"Loan Term (1-7 years)\"\n            value={loanTerm}\n            onChange={(e) => handleChange(\"loanTerm\", e.target.value)}\n            onBlur={(e) => handleBlur(\"loanTerm\", e.target.value)}\n          />\n          {touched.loanTerm && errors.loanTerm && (\n            <span className=\"errorText\" style={{ color: \"red\" }}>\n              {errors.loanTerm}\n            </span> // Inline error (Requirement 3)\n          )}\n        </div>\n\n        {/* Submit Button */}\n        <button type=\"submit\" disabled={!isFormValid}>\n          Submit\n        </button>\n      </form>\n\n      {/* Display Loan Offers (Requirement 5) */}\n      {offers.length > 0 && (\n        <div>\n          <h3>Loan Offers</h3>\n          <ul>\n            {offers.map((offer, idx) => (\n              <li key={idx}>\n                <strong>{offer.lenderName}</strong> — $\n                {offer.monthlyRepayment.toFixed(2)} / month @{\" \"}\n                {offer.interestRate}% ({offer.fees})\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default LoanOfferComparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}